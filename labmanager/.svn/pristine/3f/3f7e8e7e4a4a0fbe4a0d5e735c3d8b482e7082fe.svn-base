package kr.ac.computereng.labmanager.controllers;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;

import kr.ac.computereng.labmanager.common.datatype.UserDatatype;
import kr.ac.computereng.labmanager.common.user.IUserService;

@Controller
public class UserController {
	/*
	 * get post로 받는 방법 구분하는것
	 * board-mapper 추가하면 서버가 작동안되는것
	 */
	@Autowired
	private IUserService userService;
	
	@RequestMapping(path="/joinform", method=RequestMethod.GET)
	public ModelAndView joinform() {
		return new ModelAndView("joinform", "user", new UserDatatype());
	}
	
	@RequestMapping(path="/join", method=RequestMethod.GET)
	public ModelAndView join() {
		return new ModelAndView("join", "user", new UserDatatype());
	}
	
	@RequestMapping(path="/join", method=RequestMethod.POST)
	public String join(@ModelAttribute("user") UserDatatype user) {
		try {
			this.userService.joinUser(user);
		} catch (Exception e) {
			// TODO Exception handling. for example move to error message html page.
			e.printStackTrace();
		}
		return "redirect: /labmanager/main/hello";
	}
	
	@RequestMapping(path="/login", method=RequestMethod.GET)
	public ModelAndView login() {
		return new ModelAndView("login", "user", new UserDatatype());
	}
	
	@RequestMapping(path="/login", method=RequestMethod.POST)
	public ModelAndView login(HttpSession session, @ModelAttribute("user") UserDatatype user) {
		ModelAndView mv = new ModelAndView();
		RedirectView rv = new RedirectView("/labmanager/main/hello");
		rv.setExposeModelAttributes(false);
		mv.setView(rv);
		try {
			UserDatatype member = this.userService.searchOne(user.getId());
			if(member == null || !member.getPassword().equals(user.getPassword())) {
				mv.setViewName("loginFalse");
			}
			else {
				/*modelandview 에서 addobj 로 하는건지? 안되는데 그 이유는?
				 * session.set~ 이거를 일일이 다해줘야하는건지?
				 * session.set~("user",member) 안됨.
				 * */
				session.setAttribute("user", member);
//				session.setAttribute("userName", member.getName());
//				session.setAttribute("userEmail1", member.getEmail1());
			}
		} catch (Exception e) {
			// TODO Exception handling. for example move to error message html page.
		}
		return mv;
	}
	
	@RequestMapping(path="/modifyform", method=RequestMethod.GET)
	public String modifyform() {
		return "modifyform";
	}
	
	@RequestMapping(path="/modify", method=RequestMethod.GET)
	public ModelAndView modify(HttpSession session) {
		ModelAndView mv = new ModelAndView();
		mv.addObject("user", session.getAttribute("user"));
		return "redirect: /labmanager/main/hello";
	}
	
	@RequestMapping(path="/modify", method=RequestMethod.POST)
	public String modify(@ModelAttribute("user") UserDatatype user) {
		try {
			this.userService.updateUser(user);
		} catch (Exception e) {
			// TODO Exception handling. for example move to error message html page.
		}
		return "redirect: /labmanager/main/hello";
	}
	
	@RequestMapping(path="/withdraw", method=RequestMethod.GET)
	public String withdraw(HttpSession session) {
		try {
			this.userService.withdraw((String)session.getAttribute("userId"));
			session.invalidate();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return "withdraw";
	}
	
	@RequestMapping(path="/withdraw", method=RequestMethod.POST)
	public String withdraw(@ModelAttribute("user") UserDatatype user) {
		/*
		try {
			this.userService.joinUser(user);
		} catch (Exception e) {
			// TODO Exception handling. for example move to error message html page.
		}
		*/
		return "redirect: /labmanager/main/hello";
	}
	
	@RequestMapping(path="/logout", method=RequestMethod.GET)
	public String logout(HttpSession session) {
		try {
			session.invalidate();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return "logout";
	}
	
	@RequestMapping(path="/selectAll", method=RequestMethod.GET)
	public ModelAndView selectAll() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("selectAll");
		try {
			mv.addObject("userList", this.userService.search());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return mv;
	}
	
	@RequestMapping(path="/selectOne", method=RequestMethod.GET)
	public ModelAndView selectOne(String id) {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("selectOne");
		try {
			UserDatatype user = this.userService.searchOne(id);
			mv.addObject("userId", user.getId());
			mv.addObject("userName", user.getName());
			mv.addObject("userPassword", user.getPassword());
			mv.addObject("userEmail1", user.getEmail1());
			mv.addObject("userEmail2", user.getEmail2());
			mv.addObject("userHope", user.getHope());
			mv.addObject("userStudy", user.getStudy());
			mv.addObject("userRole", user.getRole());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return mv;
	}
	
	@RequestMapping(path="/selectAll", method=RequestMethod.POST)
	public String selectAll(@ModelAttribute("user") UserDatatype user) {
		/*
		try {
			this.userService.joinUser(user);
		} catch (Exception e) {
			// TODO Exception handling. for example move to error message html page.
		}
		*/
		return "redirect: /labmanager/main/hello";
	}
}
